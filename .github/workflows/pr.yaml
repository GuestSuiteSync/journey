name: Journey Pull Request Workflow

on:
  pull_request:
    branches:
      - main
      - staging
      - prod
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DEBUG: ${{ vars.DEBUG }}
  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
  ENVIRONMENT: ${{vars.ENVIRONMENT}}

jobs:
  gitleak-scan:
    name: Gitleak Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Gitleaks scan
        uses: gitleaks/gitleaks-action@v2

      - name: Run Gitleaks scan
        run: gitleaks detect --source . --exit-code 1

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: gitleak-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python3
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install UV
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Install Dependencies
        run: |
          uv install

      - name: Run All Test Cases
        run: |
          coverage run manage.py test

      - name: Coverage Threshold Check
        run: | 
          COVERAGE=$(coverage report --format=total)
          echo "Coverage Report: $COVERAGE%"
          if ["$COVERAGE" -lt 80]; then
            echo "Code coverage is below the threshold of 80%."
            exit 1
          fi

  trivy-scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run trivy scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          vuln-type: 'os,library'
          ignore-unfixed: true
